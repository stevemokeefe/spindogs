{"mappings":"IC2GI,EA1GJ,MAAM,EAAQ,SAAS,cAAc,CAAC,iBAChC,EAAa,EAAM,gBAAgB,CAAC,oCACpC,EAAe,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,CAEvD,IAAI,EAAqB,KAGzB,SAAS,EAAY,CAAI,EACrB,OAAO,GAAM,aAAa,sBAC9B,CAEA,SAAS,IAGL,AAFa,MAAM,IAAI,CAAC,EAAM,IAAI,EAE7B,OAAO,CAAC,AAAA,IAET,AADoB,EAAI,gBAAgB,CAAC,mBAC7B,OAAO,CAAC,AAAA,IACpB,EAAK,SAAS,CAAC,MAAM,CAAC,SAAU,kBAChC,EAAK,KAAK,CAAC,IAAI,CAAG,EAClB,GAGA,AADc,MAAM,IAAI,CAAC,EAAI,gBAAgB,CAAC,0BACxC,IAAI,CAAC,CAAC,EAAG,IACf,SAAS,EAAY,IAAM,SAAS,EAAY,KAC9C,OAAO,CAAC,AAAA,GAAQ,EAAI,WAAW,CAAC,GACtC,GAEA,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAE/B,EAAqB,KAGrB,EAAW,OAAO,CAAC,AAAA,GAAM,EAAG,OAAO,CAAG,CAAA,EAC1C,CAEA,SAAS,EAAY,CAAQ,EAGzB,AAFa,MAAM,IAAI,CAAC,EAAM,IAAI,EAE7B,OAAO,CAAC,AAAA,IACT,IAAM,EAAO,EAAI,aAAa,CAAC,CAAC,sBAAsB,EAAE,EAAS,EAAE,CAAC,EAC/D,IAGL,EAAI,YAAY,CAAC,EAAM,EAAI,KAAK,CAAC,EAAE,EAGnC,EAAK,SAAS,CAAC,GAAG,CAAC,SAAU,kBAC7B,EAAK,KAAK,CAAC,IAAI,CAAG,CAAA,EAAG,EAAa,EAAE,CAAC,CACrC,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iBAI5B,AADoB,EAAI,gBAAgB,CAAC,mBAC7B,OAAO,CAAC,AAAA,IAChB,EAAY,KAAO,IACnB,EAAE,SAAS,CAAC,MAAM,CAAC,SAAU,kBAC7B,EAAE,KAAK,CAAC,IAAI,CAAG,GAEnB,GACJ,GAEA,EAAqB,EAGrB,EAAW,OAAO,CAAC,AAAA,GACf,EAAG,OAAO,CAAG,EAAG,YAAY,CAAC,cAAgB,EAErD,CAWA,EAAW,OAAO,CAAC,AAAA,IACf,EAAS,gBAAgB,CAAC,SAAU,KAChC,IAAM,EAAW,EAAS,YAAY,CAAC,WACvC,CAAA,EAAS,OAAO,CAAG,EAAY,GAAY,GAC/C,EACJ,GAEA,EAAM,gBAAgB,CAAC,QAAS,AAAA,IAE5B,IAAM,EAAW,EADJ,EAAE,MAAM,CAAC,OAAO,CAAC,UAEzB,CAAA,IAlBD,AAmBS,IAnBI,EACb,IAEA,EAgBS,GACjB,GAGA,MAAM,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAgB,EAAW,aAAa,CAAC,gBACzC,EAAoB,EAAW,aAAa,CAAC,oBAC7C,EAAU,EAAW,aAAa,CAAC,gBASzC,EAAc,gBAAgB,CAAC,QAP/B,WACI,IAAM,EAAY,EAAQ,SAAS,CAAC,QAAQ,CAAC,cAC7C,EAAQ,SAAS,CAAC,MAAM,CAAC,cAEzB,EAAkB,WAAW,CAAG,EAAY,YAAc,YAC9D,GAKA,OAAO,gBAAgB,CAAC,SAAU,KAC9B,aAAa,GACb,EAAc,WAAW,KACjB,OAAO,UAAU,EAAI,MACrB,EAAQ,SAAS,CAAC,MAAM,CAAC,cACzB,EAAkB,WAAW,CAAG,YAExC,EAAG,IACP","sources":["<anon>","src/js/main.js"],"sourcesContent":["var $54b47fc030b7b21e$exports = {};\n// COMPARE TABLE\nconst $54b47fc030b7b21e$var$table = document.getElementById(\"compare-table\");\nconst $54b47fc030b7b21e$var$checkboxes = $54b47fc030b7b21e$var$table.querySelectorAll('input[type=\"checkbox\"][data-col]');\nconst $54b47fc030b7b21e$var$itemColWidth = $54b47fc030b7b21e$var$table.rows[0].cells[0].offsetWidth;\nlet $54b47fc030b7b21e$var$currentStickyIndex = null;\n// Utility Functions\nfunction $54b47fc030b7b21e$var$getColIndex(cell) {\n    return cell?.getAttribute(\"data-original-index\");\n}\nfunction $54b47fc030b7b21e$var$unstickCurrentColumn() {\n    const rows = Array.from($54b47fc030b7b21e$var$table.rows);\n    rows.forEach((row)=>{\n        const stickyCells = row.querySelectorAll(\".sticky-compare\");\n        stickyCells.forEach((cell)=>{\n            cell.classList.remove(\"sticky\", \"sticky-compare\");\n            cell.style.left = \"\";\n        });\n        const cells = Array.from(row.querySelectorAll(\"[data-original-index]\"));\n        cells.sort((a, b)=>parseInt($54b47fc030b7b21e$var$getColIndex(a)) - parseInt($54b47fc030b7b21e$var$getColIndex(b))).forEach((cell)=>row.appendChild(cell));\n    });\n    document.body.classList.remove(\"sticky-active\");\n    $54b47fc030b7b21e$var$currentStickyIndex = null;\n    // Uncheck all checkboxes\n    $54b47fc030b7b21e$var$checkboxes.forEach((cb)=>cb.checked = false);\n}\nfunction $54b47fc030b7b21e$var$stickColumn(colIndex) {\n    const rows = Array.from($54b47fc030b7b21e$var$table.rows);\n    rows.forEach((row)=>{\n        const cell = row.querySelector(`[data-original-index=\"${colIndex}\"]`);\n        if (!cell) return;\n        // Move cell to second column (after \"Item\")\n        row.insertBefore(cell, row.cells[1]);\n        // Style as sticky\n        cell.classList.add(\"sticky\", \"sticky-compare\");\n        cell.style.left = `${$54b47fc030b7b21e$var$itemColWidth}px`;\n        document.body.classList.add(\"sticky-active\");\n        // Remove sticky class from any previous sticky cells\n        const stickyCells = row.querySelectorAll(\".sticky-compare\");\n        stickyCells.forEach((c)=>{\n            if ($54b47fc030b7b21e$var$getColIndex(c) !== colIndex) {\n                c.classList.remove(\"sticky\", \"sticky-compare\");\n                c.style.left = \"\";\n            }\n        });\n    });\n    $54b47fc030b7b21e$var$currentStickyIndex = colIndex;\n    // Sync checkboxes\n    $54b47fc030b7b21e$var$checkboxes.forEach((cb)=>cb.checked = cb.getAttribute(\"data-col\") === colIndex);\n}\nfunction $54b47fc030b7b21e$var$toggleColumn(colIndex) {\n    if (colIndex === $54b47fc030b7b21e$var$currentStickyIndex) $54b47fc030b7b21e$var$unstickCurrentColumn();\n    else $54b47fc030b7b21e$var$stickColumn(colIndex);\n}\n// Event Handlers\n$54b47fc030b7b21e$var$checkboxes.forEach((checkbox)=>{\n    checkbox.addEventListener(\"change\", ()=>{\n        const colIndex = checkbox.getAttribute(\"data-col\");\n        checkbox.checked ? $54b47fc030b7b21e$var$stickColumn(colIndex) : $54b47fc030b7b21e$var$unstickCurrentColumn();\n    });\n});\n$54b47fc030b7b21e$var$table.addEventListener(\"click\", (e)=>{\n    const cell = e.target.closest(\"td, th\");\n    const colIndex = $54b47fc030b7b21e$var$getColIndex(cell);\n    if (!colIndex) return;\n    $54b47fc030b7b21e$var$toggleColumn(colIndex);\n});\n// NAVIGATION MENU\nconst $54b47fc030b7b21e$var$navButtons = document.querySelector('.nav-buttons');\nconst $54b47fc030b7b21e$var$chevronButton = $54b47fc030b7b21e$var$navButtons.querySelector('.btn-chevron');\nconst $54b47fc030b7b21e$var$chevronButtonText = $54b47fc030b7b21e$var$navButtons.querySelector('.visually-hidden');\nconst $54b47fc030b7b21e$var$navList = $54b47fc030b7b21e$var$navButtons.querySelector('.list-inline');\nfunction $54b47fc030b7b21e$var$toggleMenu() {\n    const isVisible = $54b47fc030b7b21e$var$navList.classList.contains('is-visible');\n    $54b47fc030b7b21e$var$navList.classList.toggle('is-visible');\n    $54b47fc030b7b21e$var$chevronButtonText.textContent = isVisible ? 'open menu' : 'close menu';\n}\n$54b47fc030b7b21e$var$chevronButton.addEventListener('click', $54b47fc030b7b21e$var$toggleMenu);\nlet $54b47fc030b7b21e$var$resizeTimer;\nwindow.addEventListener('resize', ()=>{\n    clearTimeout($54b47fc030b7b21e$var$resizeTimer);\n    $54b47fc030b7b21e$var$resizeTimer = setTimeout(()=>{\n        if (window.innerWidth >= 768) {\n            $54b47fc030b7b21e$var$navList.classList.remove('is-visible');\n            $54b47fc030b7b21e$var$chevronButtonText.textContent = 'open menu';\n        }\n    }, 250);\n});\n\n\n//# sourceMappingURL=spindogs.c069e807.js.map\n","// COMPARE TABLE\nconst table = document.getElementById(\"compare-table\");\nconst checkboxes = table.querySelectorAll('input[type=\"checkbox\"][data-col]');\nconst itemColWidth = table.rows[0].cells[0].offsetWidth;\n\nlet currentStickyIndex = null;\n\n// Utility Functions\nfunction getColIndex(cell) {\n    return cell?.getAttribute(\"data-original-index\");\n}\n\nfunction unstickCurrentColumn() {\n    const rows = Array.from(table.rows);\n\n    rows.forEach(row => {\n        const stickyCells = row.querySelectorAll(\".sticky-compare\");\n        stickyCells.forEach(cell => {\n        cell.classList.remove(\"sticky\", \"sticky-compare\");\n        cell.style.left = \"\";\n        });\n\n        const cells = Array.from(row.querySelectorAll(\"[data-original-index]\"));\n        cells.sort((a, b) =>\n        parseInt(getColIndex(a)) - parseInt(getColIndex(b))\n        ).forEach(cell => row.appendChild(cell));\n    });\n\n    document.body.classList.remove(\"sticky-active\");\n\n    currentStickyIndex = null;\n\n    // Uncheck all checkboxes\n    checkboxes.forEach(cb => cb.checked = false);\n}\n\nfunction stickColumn(colIndex) {\n    const rows = Array.from(table.rows);\n\n    rows.forEach(row => {\n        const cell = row.querySelector(`[data-original-index=\"${colIndex}\"]`);\n        if (!cell) return;\n\n        // Move cell to second column (after \"Item\")\n        row.insertBefore(cell, row.cells[1]);\n\n        // Style as sticky\n        cell.classList.add(\"sticky\", \"sticky-compare\");\n        cell.style.left = `${itemColWidth}px`;\n        document.body.classList.add(\"sticky-active\");\n\n        // Remove sticky class from any previous sticky cells\n        const stickyCells = row.querySelectorAll(\".sticky-compare\");\n        stickyCells.forEach(c => {\n        if (getColIndex(c) !== colIndex) {\n            c.classList.remove(\"sticky\", \"sticky-compare\");\n            c.style.left = \"\";\n        }\n        });\n    });\n\n    currentStickyIndex = colIndex;\n\n    // Sync checkboxes\n    checkboxes.forEach(cb =>\n        cb.checked = cb.getAttribute(\"data-col\") === colIndex\n    );\n}\n\nfunction toggleColumn(colIndex) {\n    if (colIndex === currentStickyIndex) {\n        unstickCurrentColumn();\n    } else {\n        stickColumn(colIndex);\n    }\n}\n\n// Event Handlers\ncheckboxes.forEach(checkbox => {\n    checkbox.addEventListener(\"change\", () => {\n        const colIndex = checkbox.getAttribute(\"data-col\");\n        checkbox.checked ? stickColumn(colIndex) : unstickCurrentColumn();\n    });\n});\n\ntable.addEventListener(\"click\", e => {\n    const cell = e.target.closest(\"td, th\");\n    const colIndex = getColIndex(cell);\n    if (!colIndex) return;\n    toggleColumn(colIndex);\n});\n\n// NAVIGATION MENU\nconst navButtons = document.querySelector('.nav-buttons');\nconst chevronButton = navButtons.querySelector('.btn-chevron');\nconst chevronButtonText = navButtons.querySelector('.visually-hidden');\nconst navList = navButtons.querySelector('.list-inline');\n\nfunction toggleMenu() {\n    const isVisible = navList.classList.contains('is-visible');\n    navList.classList.toggle('is-visible');\n    \n    chevronButtonText.textContent = isVisible ? 'open menu' : 'close menu';\n}\n\nchevronButton.addEventListener('click', toggleMenu);\n\nlet resizeTimer;\nwindow.addEventListener('resize', () => {\n    clearTimeout(resizeTimer);\n    resizeTimer = setTimeout(() => {\n        if (window.innerWidth >= 768) {\n            navList.classList.remove('is-visible');\n            chevronButtonText.textContent = 'open menu';\n        }\n    }, 250);\n});"],"names":["$54b47fc030b7b21e$var$resizeTimer","$54b47fc030b7b21e$var$table","document","getElementById","$54b47fc030b7b21e$var$checkboxes","querySelectorAll","$54b47fc030b7b21e$var$itemColWidth","rows","cells","offsetWidth","$54b47fc030b7b21e$var$currentStickyIndex","$54b47fc030b7b21e$var$getColIndex","cell","getAttribute","$54b47fc030b7b21e$var$unstickCurrentColumn","Array","from","forEach","row","stickyCells","classList","remove","style","left","sort","a","b","parseInt","appendChild","body","cb","checked","$54b47fc030b7b21e$var$stickColumn","colIndex","querySelector","insertBefore","add","c","checkbox","addEventListener","e","target","closest","$54b47fc030b7b21e$var$navButtons","$54b47fc030b7b21e$var$chevronButton","$54b47fc030b7b21e$var$chevronButtonText","$54b47fc030b7b21e$var$navList","isVisible","contains","toggle","textContent","window","clearTimeout","setTimeout","innerWidth"],"version":3,"file":"spindogs.c069e807.js.map"}